"""
This script contains a unit test function to test the pivot_title_x_users function in the table_formatting module. The
pivot_title_x_users function pivots a DataFrame with movie ratings data, where rows represent individual ratings, to a
new DataFrame where rows represent individual movie titles, columns represent users, and the cells represent the
corresponding movie rating by the user.

The script imports the pandas and pytest modules and defines a fixture that creates a sample input DataFrame with movie
ratings data. The test function calculates the expected output based on the input fixture and asserts that the output
DataFrame generated by the pivot_title_x_users function has the correct format and contains the expected values.

To run the test, execute the test_pivot_title_x_users function.
"""

import numpy as np
import pandas as pd
import pytest

from movie_recommend.utils.table_formatting import pivot_title_x_users


@pytest.fixture
def input_df():
    return pd.DataFrame(
        {
            "movieId": ["1", "1", "1", "3", "3", "3", "3", "4"],
            "title": [
                "Toy Story",
                "Toy Story",
                "Toy Story",
                "The Incredibles",
                "The Incredibles",
                "The Incredibles",
                "The Incredibles",
                "The Lion King",
            ],
            "genre": [
                "Animation",
                "Animation",
                "Animation",
                "Action",
                "Action",
                "Action",
                "Action",
                "Animation",
            ],
            "userId": ["1", "2", "3", "2", "3", "4", "5", np.nan],
            "rating": [5.0, 4.0, 3.5, 4.5, np.nan, 3.5, 4.0, np.nan],
            "totalRatingCount": [3, 3, 3, 4, 4, 4, 4, 0],
        }
    )


def test_pivot_title_x_users(input_df):
    # call the function and get the output dataframe
    output_df = pivot_title_x_users(input_df)

    # define the expected output dataframe
    expected_data = {
        "The Incredibles": [0.0, 4.5, 0.0, 3.5, 4.0],
        "Toy Story": [5.0, 4.0, 3.5, 0.0, 0.0],
    }
    expected_data = pd.DataFrame.from_dict(expected_data)
    expected_data.index.name = "userId"
    expected_data.columns.name = "title"
    expected_data = expected_data.T
    expected_data = expected_data.rename(
        columns={0: "1", 1: "2", 2: "3", 3: "4", 4: "5"}
    )

    # compare the expected output dataframe with the actual output dataframe
    pd.testing.assert_frame_equal(output_df, expected_data)
